export const ABI = [
  {
    type: 'constructor',
    stateMutability: 'nonpayable',
    inputs: [
      { type: 'address', name: '_base', internalType: 'contract BaseRegistrarImplementation' },
      { type: 'address', name: '_prices', internalType: 'contract IPriceOracle' },
      { type: 'uint256', name: '_minCommitmentAge', internalType: 'uint256' },
      { type: 'uint256', name: '_maxCommitmentAge', internalType: 'uint256' },
      { type: 'address', name: '_reverseRegistrar', internalType: 'contract ReverseRegistrar' },
      { type: 'address', name: '_nameWrapper', internalType: 'contract INameWrapper' },
      { type: 'address', name: '_ens', internalType: 'contract ENS' },
    ],
  },
  {
    type: 'error',
    name: 'CommitmentTooNew',
    inputs: [{ type: 'bytes32', name: 'commitment', internalType: 'bytes32' }],
  },
  {
    type: 'error',
    name: 'CommitmentTooOld',
    inputs: [{ type: 'bytes32', name: 'commitment', internalType: 'bytes32' }],
  },
  { type: 'error', name: 'DurationTooShort', inputs: [{ type: 'uint256', name: 'duration', internalType: 'uint256' }] },
  { type: 'error', name: 'InsufficientValue', inputs: [] },
  { type: 'error', name: 'MaxCommitmentAgeTooHigh', inputs: [] },
  { type: 'error', name: 'MaxCommitmentAgeTooLow', inputs: [] },
  { type: 'error', name: 'NameNotAvailable', inputs: [{ type: 'string', name: 'name', internalType: 'string' }] },
  { type: 'error', name: 'ResolverRequiredWhenDataSupplied', inputs: [] },
  {
    type: 'error',
    name: 'UnexpiredCommitmentExists',
    inputs: [{ type: 'bytes32', name: 'commitment', internalType: 'bytes32' }],
  },
  {
    type: 'event',
    name: 'NameRegistered',
    inputs: [
      { type: 'string', name: 'name', internalType: 'string', indexed: false },
      { type: 'bytes32', name: 'label', internalType: 'bytes32', indexed: true },
      { type: 'address', name: 'owner', internalType: 'address', indexed: true },
      { type: 'uint256', name: 'baseCost', internalType: 'uint256', indexed: false },
      { type: 'uint256', name: 'premium', internalType: 'uint256', indexed: false },
      { type: 'uint256', name: 'expires', internalType: 'uint256', indexed: false },
    ],
    anonymous: false,
  },
  {
    type: 'event',
    name: 'NameRenewed',
    inputs: [
      { type: 'string', name: 'name', internalType: 'string', indexed: false },
      { type: 'bytes32', name: 'label', internalType: 'bytes32', indexed: true },
      { type: 'uint256', name: 'cost', internalType: 'uint256', indexed: false },
      { type: 'uint256', name: 'expires', internalType: 'uint256', indexed: false },
    ],
    anonymous: false,
  },
  {
    type: 'event',
    name: 'OwnershipTransferred',
    inputs: [
      { type: 'address', name: 'previousOwner', internalType: 'address', indexed: true },
      { type: 'address', name: 'newOwner', internalType: 'address', indexed: true },
    ],
    anonymous: false,
  },
  {
    type: 'function',
    stateMutability: 'view',
    outputs: [{ type: 'uint256', name: '', internalType: 'uint256' }],
    name: 'MIN_REGISTRATION_DURATION',
    inputs: [],
  },
  {
    type: 'function',
    stateMutability: 'view',
    outputs: [{ type: 'bool', name: '', internalType: 'bool' }],
    name: 'available',
    inputs: [{ type: 'string', name: 'name', internalType: 'string' }],
  },
  {
    type: 'function',
    stateMutability: 'nonpayable',
    outputs: [],
    name: 'commit',
    inputs: [{ type: 'bytes32', name: 'commitment', internalType: 'bytes32' }],
  },
  {
    type: 'function',
    stateMutability: 'view',
    outputs: [{ type: 'uint256', name: '', internalType: 'uint256' }],
    name: 'commitments',
    inputs: [{ type: 'bytes32', name: '', internalType: 'bytes32' }],
  },
  {
    type: 'function',
    stateMutability: 'pure',
    outputs: [{ type: 'bytes32', name: '', internalType: 'bytes32' }],
    name: 'makeCommitment',
    inputs: [
      { type: 'string', name: 'name', internalType: 'string' },
      { type: 'address', name: 'owner', internalType: 'address' },
      { type: 'uint256', name: 'duration', internalType: 'uint256' },
      { type: 'bytes32', name: 'secret', internalType: 'bytes32' },
      { type: 'address', name: 'resolver', internalType: 'address' },
      { type: 'bytes[]', name: 'data', internalType: 'bytes[]' },
      { type: 'bool', name: 'reverseRecord', internalType: 'bool' },
      { type: 'uint16', name: 'ownerControlledFuses', internalType: 'uint16' },
    ],
  },
  {
    type: 'function',
    stateMutability: 'view',
    outputs: [{ type: 'uint256', name: '', internalType: 'uint256' }],
    name: 'maxCommitmentAge',
    inputs: [],
  },
  {
    type: 'function',
    stateMutability: 'view',
    outputs: [{ type: 'uint256', name: '', internalType: 'uint256' }],
    name: 'minCommitmentAge',
    inputs: [],
  },
  {
    type: 'function',
    stateMutability: 'view',
    outputs: [{ type: 'address', name: '', internalType: 'contract INameWrapper' }],
    name: 'nameWrapper',
    inputs: [],
  },
  {
    type: 'function',
    stateMutability: 'view',
    outputs: [{ type: 'address', name: '', internalType: 'address' }],
    name: 'owner',
    inputs: [],
  },
  {
    type: 'function',
    stateMutability: 'view',
    outputs: [{ type: 'address', name: '', internalType: 'contract IPriceOracle' }],
    name: 'prices',
    inputs: [],
  },
  {
    type: 'function',
    stateMutability: 'nonpayable',
    outputs: [],
    name: 'recoverFunds',
    inputs: [
      { type: 'address', name: '_token', internalType: 'address' },
      { type: 'address', name: '_to', internalType: 'address' },
      { type: 'uint256', name: '_amount', internalType: 'uint256' },
    ],
  },
  {
    type: 'function',
    stateMutability: 'payable',
    outputs: [],
    name: 'register',
    inputs: [
      { type: 'string', name: 'name', internalType: 'string' },
      { type: 'address', name: 'owner', internalType: 'address' },
      { type: 'uint256', name: 'duration', internalType: 'uint256' },
      { type: 'bytes32', name: 'secret', internalType: 'bytes32' },
      { type: 'address', name: 'resolver', internalType: 'address' },
      { type: 'bytes[]', name: 'data', internalType: 'bytes[]' },
      { type: 'bool', name: 'reverseRecord', internalType: 'bool' },
      { type: 'uint16', name: 'ownerControlledFuses', internalType: 'uint16' },
    ],
  },
  {
    type: 'function',
    stateMutability: 'payable',
    outputs: [],
    name: 'renew',
    inputs: [
      { type: 'string', name: 'name', internalType: 'string' },
      { type: 'uint256', name: 'duration', internalType: 'uint256' },
    ],
  },
  { type: 'function', stateMutability: 'nonpayable', outputs: [], name: 'renounceOwnership', inputs: [] },
  {
    type: 'function',
    stateMutability: 'view',
    outputs: [
      {
        type: 'tuple',
        name: 'price',
        internalType: 'struct IPriceOracle.Price',
        components: [
          { type: 'uint256', name: 'base', internalType: 'uint256' },
          { type: 'uint256', name: 'premium', internalType: 'uint256' },
        ],
      },
    ],
    name: 'rentPrice',
    inputs: [
      { type: 'string', name: 'name', internalType: 'string' },
      { type: 'uint256', name: 'duration', internalType: 'uint256' },
    ],
  },
  {
    type: 'function',
    stateMutability: 'view',
    outputs: [{ type: 'address', name: '', internalType: 'contract ReverseRegistrar' }],
    name: 'reverseRegistrar',
    inputs: [],
  },
  {
    type: 'function',
    stateMutability: 'pure',
    outputs: [{ type: 'bool', name: '', internalType: 'bool' }],
    name: 'supportsInterface',
    inputs: [{ type: 'bytes4', name: 'interfaceID', internalType: 'bytes4' }],
  },
  {
    type: 'function',
    stateMutability: 'nonpayable',
    outputs: [],
    name: 'transferOwnership',
    inputs: [{ type: 'address', name: 'newOwner', internalType: 'address' }],
  },
  {
    type: 'function',
    stateMutability: 'pure',
    outputs: [{ type: 'bool', name: '', internalType: 'bool' }],
    name: 'valid',
    inputs: [{ type: 'string', name: 'name', internalType: 'string' }],
  },
  { type: 'function', stateMutability: 'nonpayable', outputs: [], name: 'withdraw', inputs: [] },
];
